{"version":3,"file":"Restaurant.js","sourceRoot":"","sources":["../../src/models/Restaurant.ts"],"names":[],"mappings":";;;;AAAA,mDAA4C;AAC5C,+DAA8H;AAC9H,mEAA4D;AAC5D,qDAA8C;AAC9C,+DAAwD;AAExD,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,4BAAiB;CA6CzC,CAAA;AAzCC;IAHC,iCAAU;IACV,oCAAa;IACb,6BAAM;;sCACK;AAUZ;IARC,6BAAM,CAAC;QACN,IAAI,EAAE,+BAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7B,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACR,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX;KACF,CAAC;;+CACmB;AAUrB;IARC,6BAAM,CAAC;QACN,IAAI,EAAE,+BAAQ,CAAC,MAAM;QACrB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACR,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX;KACF,CAAC;;kDACsB;AAGxB;IADC,8BAAO,CAAC,GAAG,EAAE,CAAC,+BAAqB,EAAE,EAAC,UAAU,EAAE,cAAc,EAAE,EAAE,EAAE,cAAc,EAAC,CAAC;;gDACjD;AAGtC;IADC,8BAAO,CAAC,GAAG,EAAE,CAAC,wBAAc,EAAE,EAAC,UAAU,EAAE,cAAc,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC;;yCACjD;AAGxB;IADC,6BAAM,CAAC,EAAC,IAAI,EAAE,+BAAQ,CAAC,OAAO,EAAC,CAAC;;+CACZ;AAGrB;IADC,8BAAO,CAAC,GAAG,EAAE,CAAC,6BAAmB,EAAE,EAAC,UAAU,EAAE,gBAAgB,EAAE,EAAE,EAAE,cAAc,EAAE,SAAS,EAAE,gBAAgB,EAAC,CAAC;;gDAChF;AAIpC;IAFC,gCAAS;IACT,6BAAM;sCACK,IAAI;6CAAC;AAIjB;IAFC,gCAAS;IACT,6BAAM;sCACK,IAAI;6CAAC;AA5Cb,UAAU;IADf,4BAAK,CAAC,EAAC,SAAS,EAAE,aAAa,EAAC,CAAC;GAC5B,UAAU,CA6Cf;AAEY,QAAA,eAAe,GAAG,UAAU,CAAC;AAC1C,mBAAS,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;AAElC,kBAAe,UAAU,CAAC","sourcesContent":["import sequelize from \"../config/sequelize\";\nimport {Table, Column, Model, DataType, CreatedAt, HasMany, UpdatedAt, PrimaryKey, AutoIncrement} from \"sequelize-typescript\";\nimport RestaurantOpeningHour from \"./RestaurantOpeningHour\";\nimport RestaurantMenu from \"./RestaurantMenu\";\nimport UserPurchaseHistory from \"./UserPurchaseHistory\";\n@Table({tableName: \"Restaurants\"})\nclass Restaurant extends Model<Restaurant> {\n  @PrimaryKey\n  @AutoIncrement\n  @Column\n  id!: number;\n\n  @Column({\n    type: DataType.DECIMAL(16, 2),\n    allowNull: false,\n    validate: {\n      notEmpty: true,\n      trim: true,\n    },\n  })\n  cashBalance!: number;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    validate: {\n      notEmpty: true,\n      trim: true,\n    },\n  })\n  restaurantName!: string;\n\n  @HasMany(() => RestaurantOpeningHour, {foreignKey: \"restaurantId\", as: \"openingHours\"})\n  openingHours: RestaurantOpeningHour[];\n\n  @HasMany(() => RestaurantMenu, {foreignKey: \"restaurantId\", as: \"menus\"})\n  menus: RestaurantMenu[];\n\n  @Column({type: DataType.VIRTUAL})\n  hoursByWeek!: number;\n\n  @HasMany(() => UserPurchaseHistory, {foreignKey: \"restaurantName\", as: \"transactions\", sourceKey: \"restaurantName\"})\n  transactions: UserPurchaseHistory[];\n\n  @CreatedAt\n  @Column\n  createdAt!: Date;\n\n  @UpdatedAt\n  @Column\n  updatedAt!: Date;\n}\n\nexport const restaurantModel = Restaurant;\nsequelize.addModels([Restaurant]);\n\nexport default Restaurant;\n"]}